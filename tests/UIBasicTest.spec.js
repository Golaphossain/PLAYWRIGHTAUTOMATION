const {test, expect} = require('@playwright/test')
const { request } = require('http')

test('Basic Playwright Test1',async({page})=>{

    // await page.route('**/*.{jpg,jpeg,png}',route=>route.abort())
    // page.on('request',request=>console.log(request.url()))
    // page.on('response',response=>console.log(response.url(),response.status()))
    const userName = page.locator('#username')
    const password = page.locator("[type='password']")
    const signIn = page.locator('#signInBtn')
    const errorMsg = page.locator("[style*='block']")
    // const cardTitles = await page.locator('div >> h4 >> a')
    const cardTitles = await page.locator('.card-body a')
    await page.goto('https://rahulshettyacademy.com/loginpagePractise/')
    // check HomePage Titile
    // console.log(await page.title())
    await expect(page).toHaveTitle("LoginPage Practise | Rahul Shetty Academy")
    await userName.fill('rahulshettyacademy ')
    await password.fill('learning')
    await signIn.click()
    // const msg = await locator.textContent()
    // console.log(msg)
    await expect(errorMsg).toContainText('Incorrect ')
    await userName.fill("")
    await userName.fill('rahulshettyacademy')
    await signIn.click()
    const cardTitle1 = await cardTitles.first().textContent()
    // const cardTitle2 = await cardTitles.nth(1).textContent()
    const allTitles = await cardTitles.allTextContents()
    // console.log(cardTitle1)
    // console.log(cardTitle2)
    console.log(allTitles)
    // await page.pause()

})

test('Handaling UI Components',async({page})=>{
    await page.goto('https://rahulshettyacademy.com/loginpagePractise/')
    const userName = page.locator('#username')
    const password = page.locator("[type='password']")
    const signIn = page.locator('#signInBtn')
    const errorMsg = page.locator("[style*='block']")
    const dropDown = page.locator("select.form-control")
    const radioButton = page.locator(".radiotextsty")
    const okBtn = page.locator("#okayBtn")
    const terms = page.locator("#terms")
    const documnetLink = page.locator(".blinkingText")
    await dropDown.selectOption("consult")
    await radioButton.last().click()
    await okBtn.click()
    await expect(radioButton.last()).toBeChecked()
    // console.log(await radioButton.last().isChecked())
    await terms.click()
    await expect(terms).toBeChecked()
    await terms.uncheck()
    await expect(await terms.isChecked()).toBeFalsy()
    await expect(documnetLink).toHaveAttribute("class","blinkingText")
    // await page.pause()
})
test('Handaling Child Windows',async({browser})=>{
    const context = await browser.newContext()
    const page = await context.newPage()
    await page.goto('https://rahulshettyacademy.com/loginpagePractise/')
    const userName = page.locator('#username')
    const documnetLink = page.locator(".blinkingText")
    const [newPage]=await Promise.all([
        context.waitForEvent('page'),
        await documnetLink.click(),
    ])
    const redText = newPage.locator(".red")
    const text = await redText.textContent()
    const arrayText = text.split("@")[1]
    const domain = arrayText.split(" ")[0]
    // console.log(domain)
    await userName.fill(domain)
    // console.log(await userName.textContent())
    // await page.waitForTimeout(5000);
})